name: 92 Release RC on Push

on:
  push:
    branches:
      - 'release/**'

permissions:
  contents: write
  actions: read

concurrency:
  group: rc-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  tag-rc:
    if: github.actor != 'github-actions' && (vars.RELEASE_FREEZE || '0') != '1'
    runs-on: ubuntu-latest
    outputs:
      rc: ${{ steps.names.outputs.rc }}
    steps:
      - name: Guard - skip if promote-release is running
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          OWNER_REPO="${GITHUB_REPOSITORY}"
          COUNT=$(gh api \
            "/repos/$OWNER_REPO/actions/workflows/promote-release.yml/runs?status=in_progress&per_page=1" \
            -q '.total_count' || echo 0)
          if [ "$COUNT" != "0" ]; then
            echo "Promotion in progress ($COUNT run). Skipping RC tagging and staging deploy."
            exit 0
          fi
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch
        run: git fetch --all --prune --tags

      - name: Configure git identity (actor)
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Validate branch and compute RC tag (vX.Y.Z-rc.N)
        id: names
        shell: bash
        run: |
          set -euo pipefail
          BR_REF="${GITHUB_REF_NAME}"
          if ! echo "$BR_REF" | grep -Eq '^release/v[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "Branch '$BR_REF' does not match required pattern release/vX.Y.Z" >&2; exit 1;
          fi
          VER=${BR_REF#release/}           # VER like v1.2.3
          # Determine next rc number by scanning tags vX.Y.Z-rc.*
          EXISTING=$(git tag -l "${VER}-rc.*" | sed -E 's/^.*-rc\.([0-9]+)$/\1/' | sort -n | tail -n1 || true)
          if [ -n "$EXISTING" ]; then NEXT=$((EXISTING+1)); else NEXT=1; fi
          echo "rc=${VER}-rc.${NEXT}" >> "$GITHUB_OUTPUT"

      - name: Create and push RC tag
        run: |
          RC=${{ steps.names.outputs.rc }}
          git tag -a "$RC" -m "RC $RC by ${{ github.actor }}"
          git push origin "$RC"

  build-staging:
    if: github.actor != 'github-actions' && (vars.RELEASE_FREEZE || '0') != '1' && needs.tag-rc.outputs.rc != ''
    needs: tag-rc
    uses: ./.github/workflows/_build-reusable.yml
    with:
      environment: staging
      ref: ${{ needs.tag-rc.outputs.rc }}
      branch: ''
      node_version: '20'

  # deploy-staging:
  #   if: github.actor != 'github-actions' && (vars.RELEASE_FREEZE || '0') != '1' && needs.tag-rc.outputs.rc != ''
  #   needs: [tag-rc, build-staging]
  #   uses: ./.github/workflows/_deploy-reusable.yml
  #   with:
  #     environment: staging
  #     ref: ${{ needs.tag-rc.outputs.rc }}
  #     branch: ''
